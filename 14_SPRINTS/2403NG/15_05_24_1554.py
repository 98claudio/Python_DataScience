# -*- coding: utf-8 -*-
"""15-05-24-1554.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1btbhHk0azKxDJitO2xXBJ3rGv6lJKbe3
"""

import pandas as pd
# Carregar o arquivo CSV

dataframe = pd.read_csv('video_games.csv')
dataframe.head()

# Função para pesquisar jogos
def pesquisar_jogos(dataframe, nome):
    resultados = dataframe[dataframe['nome'].str.lower().str.contains(nome.lower())]
    return resultados

# Função para imprimir os resultados formatados
def imprimir_resultados(resultados):
    if resultados.empty:
        print("Nenhum jogo encontrado.")
    else:
        for index, jogo in resultados.iterrows():
            print(f"Nome: {jogo['Title'].title()}")
            print(f"Plataforma: {jogo['Release.Console']}")
            print(f"Ano: {jogo['Release.Year']}")
            print(f"Gênero: {jogo['Metadata.Genres']}")
            print(f"Publicador: {jogo['Metada.Publishers']}")
            print()

# Programa principal
def main():
    while True:
        entrada = input("Digite o nome, ou parte do nome, do jogo (ou 'sair' para encerrar): ").strip()
        if entrada.lower() == 'sair':
            print("Programa encerrado.")
            break
        resultados = pesquisar_jogos(entrada)
        imprimir_resultados(resultados)

if __name__ == "__main__":
    main()

# Programa principal
def main():
    caminho_arquivo = ("video_games.csv")  # Substitua pelo caminho correto
    dataframe = carregar_dados("video_games.csv")

    while True:
        entrada = input("Digite o nome, ou parte do nome, do jogo (ou 'sair' para encerrar): ").strip()
        if entrada.lower() == 'sair':
            print("Programa encerrado.")
            break
        resultados = pesquisar_jogos(dataframe, entrada)  # Adicione o argumento 'dataframe' aqui
        imprimir_resultados(resultados)

if __name__ == "__main__":
main()

